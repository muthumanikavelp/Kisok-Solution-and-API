@{
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<link href="~/css/common.css" rel="stylesheet" />

<style>
    .k-window-titlebar {
        background-color: snow;
    }
     
    .k-grid tr td {
        border-bottom: 1px solid #c5c5c5;
    }
</style>


<div class="box-header text-center with-border">
    <h6 class="box-title" style="text-align: center; color: red; font-weight: 600;">User List</h6>
</div>
<form id="user_form1" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="row">
            <div class="col-lg-12">
                <div id="grid_user_list">
                </div>
            </div>
        </div>
    </div>
</form>
<div id="dialog" @*style="background: #e0dbdb !important;"*@ style="background-color:white;">
    <form id="user_form" class="form-horizontal" data-role="validator" novalidate="novalidate">
        <div class="row">
            <div class="col-sm-3">
            </div>
            <div class="col-sm-4">
                <h6 style="text-align:center;color:red;font-size:19px;">User Vs Access</h6>
            </div>
            <div class="col-sm-3" id="usermenu">
                <div style="float:right;margin-right: -50px;">
                    <img title="Save" class="shade"  style="cursor:pointer;" src="~/images/save-finals.jpg" onclick="save()" />
                    @*<i class="fa fa-floppy-o fa-3x" style="color:red;font-size: 30px;cursor:pointer;" aria-hidden="true" onClick="save()"></i>&nbsp;&nbsp;&nbsp;*@
                    @*<i class="fa fa-times fa-3x" style="color:black;font-size: 30px;cursor:pointer;" data-dismiss="modal" aria-hidden="true" onClick="closerole()"></i>*@
                </div>
            </div>
        </div>
        <hr />
        <div class=" row" style="margin-right: -80px;">
            <div class="col-sm-3">
                <label class="title">User Name</label>
                <input type="text" name="In_user_name" id="txtUserName1" class="form-control" style="width:96%;height:20px">
            </div>
            <div class="col-sm-4">
                <label class="title">ID</label>
                <input type="text" name="In_user_code" id="txtUserId" class="form-control" style="width:96%;height:20px">
            </div>

            <div class="col-sm-3">
                <label class="title">Valid Till:</label>
                <input class="cusDate" data-role='datepicker' id="txtValidity1" style="width:100%;height:20px" data-checkdate-msg="Enter Valid Date" name="In_valid_till" style="width:100%" onkeypress="return date_validate(event)" />
                <span data-for='valid' class='k-invalid-msg'></span>

            </div>
        </div>

        <div class="row" style="margin-top:10px;margin-right:-80px">
            <div class="col-sm-3">
                <label class="title">Email ID</label>
                <input type="email" name="In_email_id" id="txtEmailId" class="form-control" style="width:96%;height:20px">
            </div>
            <div class="col-xs-4">
                <label class="title">Role</label>
                <input id="cmb_role" name="In_role_code" data-role="filtercombo" style="width:105%" onchange="retrieve_userrole_combo()" />
            </div>
            <div class="col-sm-3">
                <label  for="txt_mobile" style="font-weight: normal;">Mobile No</label>
                <input type="text" class="form-controls number" name="In_contact_no" id="txt_mobile" maxlength="10" onkeypress="return isNumberKey(event)" style="width:90%;height:20px">
            </div>

        </div>
        <div class="row" style="padding-bottom:3px;margin-right:-80px;margin-top:10px;">

            <div class="col-sm-3">
                <label class="cmb_Belong"  style="font-weight: normal;">Belongs to</label>
                <input id="cmb_Belong" name="In_orgn_code" data-role="filtercombo" style="width:107%" />
            </div>
            <div class="col-sm-4">
                <label for="txtPassword1" class="control-label required">Password</label>
                <input type="password" class="form-control" name="In_user_pwd" id="txtPassword1" maxlength="20" style="width:96%;height:17px">
            </div>
            <div class="col-sm-3" style="margin: 19px;">
                <label class="title">User Photo</label><br>
                <img id="Profile_img" src="~/images/NoImage.png" class="col-sm-5 img-circle profileImg"  style="left:62px;" alt="User Image" height="60" width="60" />
                <input type="file" name="file" id="file" src="~/images/noimage.png" style="width: 186px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
                <input type="hidden" id="txtImageHidden" name="In_profile_photo" />
            </div>
            <div style=" display:none">
                <div class="form-group" style=" display:none">
                    <label for="txtMode" class="control-label">Mode Flag</label>
                    <div>
                        <input type="text" name="In_mode_flag" id="txtMode" class="form-control" readonly>
                    </div>
                </div>
            </div>
        </div>


<div class="row">
    <div class="col-xs-4" style=" display:none">
        <div class="form-group">
            <label for="file" class=" col-sm-5 control-label">User Photo </label>
            <img id="Profile_img" src="~/images/NoImage.png" class="col-sm-5 img-circle profileImg" alt="User Image" height="60" width="60" />
            <div class=" col-sm-2">
            </div>
        </div>
    </div>
    <div class="col-xs-4" style=" display:none">
        <div class="form-group">
            <input type="file" name="file" id="file" src="~/images/noimage.png" style="width: 120px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
            @*<button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="submit" data-original-title="Capture Signature"> <span class="glyphicon glyphicon-camera"></span></button>*@
            <input type="hidden" id="txtImageHidden" name="In_profile_photo" />
            <div class=" col-sm-2">
            </div>
        </div>
    </div>
    <div class="col-sm-5" style="display:none">
        <div class="form-group">
            <label for="txt_timestamp" class="col-sm-5 control-label">Timestamp:</label>
            <div class="col-sm-7">
                <input type="text" id="txt_timestamp" name="In_row_timestamp" class="form-control" maxlength="125">
            </div>
        </div>
    </div>
    <div class="col-sm-5" style="display:none">
        <div class="form-group">
            <label for="txt_status_code" class="col-sm-5 control-label">Status Code:</label>
            <div class="col-sm-7">
                <input type="text" id="txt_status_code" name="In_status_code" class="form-control" maxlength="125">
                <input type="hidden" id="DocStat" name="">
            </div>
        </div>
    </div>
</div>
<div class="row" style="margin-right:-61px;">
    <div class="col-sm-11" style="padding:5px -5px 0px 10px">
        <div class="tab-content">
            <div class="tab-pane fade active in" id="permission">
                <div id="permission">
                    <div id="grid_user_detail">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
    </form>
</div>
<!-- Main content -->

<script>
    $("#file").change(function () {
        readURL(this);
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Profile_img').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);

        }
    }

    var permission = "";
    $(document).ready(function () {
        $("#dialog").hide();
        grid_user([]);
        grid_user_details([]);
        kendodate_format();
        load_master_code();
        menuId = getlocalStorage("MenuId");
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#user_form");
        kendo.init(container);
        container.kendoValidator({
        });

       
        var list_in = "";
        $("#cmb_role").empty();
        list_in = grid_comboScreen_mastercodes("ROLE");
        filter_combobox("cmb_role", list_in);

        $("#cmb_Belong").empty();
        list_in = grid_comboScreen_mastercodes("ORG_DTL");
        filter_combobox("cmb_Belong", list_in);

        Screen_Id = "USRMGMT";
        permission = sec_Master_Permission(Screen_Id);
        var presentDate = new Date();

        $(function () {
            var datepicker = $('#txtValidity1').kendoDatePicker({
                value: presentDate,
                min: presentDate,
                format: "dd/MM/yyyy",
            }).data('kendoDatePicker');
        });
        //$("#txtValidity1").kendoDatePicker({

        //    min: new Date(), // sets max date to Jan 1st, 2013
        //    format: "dd/MM/yyyy"
        //});
        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: "/UserDefinition/userDefinitionList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_list(response.context.list);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_user([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    });


    function load_master_code() {
        var data = {};
        data.screen_Id = "USRMGMT";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
    //function closerole() {
    //    $("#dialog").data("kendoWindow").close();
    //}

    function serialno() {
        debugger
        $("#dialog").kendoWindow();
        var dialog = $("#dialog").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 111,
            left: 300, height: 563, width: 900
        });
        dialog.title("User Vs Access Previlege");
        dialog.bind("open", serialno);

        //add pop up close
        dialog.unbind("close");
        dialog.bind("close", onWindowEditClose);


        create_new();

        $(document).on('dblclick', '.k-window-titlebar', function (e) {
            debugger;
            // Restore old size
            dialog.toggleMaximization();
           

        });

    }

    //pop up close refresh
    var onWindowEditClose = function (e) {
        debugger;
        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: "/UserDefinition/userDefinitionList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_list(response.context.list);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_user([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });

    };



    function grid_user(data) {
        $("#grid_user_list").kendoGrid({
            dataSource: {
                data: data, //  pageSize: 20
            },
            height: 480,
            sortable: true,
            selectable: true,
            filterable: true,
            selectable: "singl",   //  Grid Row Selection
            navigatable: true,
            toolbar: "<a class='k-grid-add' id='Assign_sevices' onClick='serialno()'><span class='fa fa-plus' style='color:Black'></span></a>",
            columns: [
                {
                    field: "orgn_code",
                    title: "Orgn code",
                    hidden: true,
                    width: 30
                },
                {
                    field: "orgn_desc",
                    title: "Orgn Desc",
                    hidden: true,
                    width: 30
                },
                {
                    field: "user_code",
                    title: "User Code",
                    width: 30
                },
                {
                    field: "user_name",
                    title: "User Name",
                    width: 30
                },
                {
                    field: "role_code",
                    title: "Role Code",
                    width: 30,
                    hidden: true,
                },
                {
                    field: "role_name",
                    title: "Role Name",
                    width: 30,
                    //hidden: true,
                },
                {
                    field: "valid_till",
                    title: "Valid Till",
                    width: 30,
                    hidden: true,
                },
                {
                    field: "contact_no",
                    title: "Contact No.",
                    width: 30,
                    hidden: true,
                },
                {
                    field: "email_id",
                    title: "Email id.",
                    hidden: true,
                    width: 30
                },
                {
                    field: "status_desc",
                    title: "Status Desc",
                    hidden: true,
                    width: 30
                }, {
                    command: [
                        //{
                        //    name: "View",
                        //    text: "<span class='fa fa-eye' style ='color:#357ab8;'onClick='onview()'></span>"
                        //},
                        {
                            name: "Edit",
                            text: "<span class='fa fa-pencil' style='color:#357ab8' onClick='onChangeSelection()'></span>"
                        },
                        {
                            name: "Delete1",
                            text: "<span class='fa fa-times' style='color:#357ab8;padding-left:2px' onClick='ondelete()'></span>"
                        },

                        //{
                        //    name: "Delete",
                        //    text: "<span class='fa fa-close' style='color:#357ab8' onClick='ondelete()'></span>"
                        //},
                    ], title: "Action", width: "25px",
                },
            ]
        });
    }

    function onChangeSelection() {
        $("#dialog").kendoWindow();
        var dialog = $("#dialog").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 111,
            left: 300, height: 565, width: 900
        });
        dialog.title("User Vs Access Previlege");
        dialog.bind("open", serialno);
        var grid = $("#grid_user_list").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        var formval = form_Serialize("user_form1");
        var obj_val = JSON.parse(formval);
        obj_val.user_code = selectedItem.user_code;
        $("#txtUserId").val(selectedItem.user_code);
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, user_code: Context.Header.user_code }),
            url: "/UserDefinition/UserDefinitionfetch",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_header(response.context.Header);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {

                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }


    function get_user_details(id) {
        var formval = form_Serialize("user_form");
        var obj_val = JSON.parse(formval);
        obj_val.user_code = id;
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, user_code: Context.Header.user_code }),
            url: "/UserDefinition/UserDefinitionfetch",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_header(response.context.Header);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }

    function generate_userrole_header(res) {
        $("#txtUserName1").val(res.out_user_name);
        $("#txtUserId").attr("readonly", "");
        $("#txtValidity1").val(res.out_valid_till);
        $('#cmb_role').data("kendoComboBox").value(res.out_role_code);
        $('#cmb_Belong').data("kendoComboBox").value(res.out_orgn_code);
        $("#txtEmailId").val(res.out_email_id);
        $("#txtPassword1").val(res.out_user_pwd);
        $("#txt_mobile").val(res.out_contact_no);
        $("#txt_status_code").val(res.out_status_code);
        $("#DocStat").val(res.out_status_desc);
        $("#txtMode").val(res.out_mode_flag);
        $("#txtImageHidden").val(res.out_profile_photo);
        $("#txt_timestamp").val(res.out_row_timestamp);
        $("#modevalue").text("Edit Mode");
        retrieve_userrole_combo();
        var profiledata = res.out_profile_photo;
        if (profiledata != "")
            document.getElementById("Profile_img").src = "data:image/png;base64," + profiledata;
        else
            document.getElementById("Profile_img").src = "/images/noimage.png";
        $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');

    }



    function save_Image() {
        var xhr = new XMLHttpRequest();
        var fd = new FormData();
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                var value = JSON.parse(xhr.responseText);
                if (value.result != undefined) {
                    $("#txtImageHidden").val(value.result);
                }
                save_user();
            }
        };
        fd.append("file", document.getElementById('file').files[0]);
        fd.append("userID", $('#txtUserId').val());
        xhr.open("POST", "/UserDefinition/User/", true);
        xhr.send(fd);
        xhr.addEventListener("load", function (event) {
        }, false);
    }

    function clear_val() {
        $("#txtUserId").val('');
        $("#txtUserName1").val('');
        $("#txtValidity1").val('');
        $('#cmb_role').data("kendoComboBox").value('');
        $('#cmb_Belong').data("kendoComboBox").value('');
        $("#txtEmailId").val('');
        $("#txtPassword1").val('');
        $("#txt_mobile").val('');
        $("#txt_status_code").val('');
        //$("#DocStat").val('');
        $("#txtMode").val('');
        $("#txt_timestamp").val('');
        grid_user_details([]);
    }

    function generate_userrole_detail(res) {
        if (res == null) {
            grid_user_details([]);
        }
        else {
            var data = changedataType(res);
            grid_user_details(data);
        }
    }

    function generate_userrole_list(res) {
        if (res == null) {
            grid_user([]);
        }
        else {
            var data = changedataType(res);
            grid_user(data);
        }
    }

    function generate_userroleactivity_detail(res) {
        if (res == null) {
            grid_user_details([]);
        }
        else {
            var data = changedataType(res);
            grid_user_details(data);
        }
    }
    function grid_user_details(role_data) {
        $("#grid_user_detail").kendoGrid({
            dataSource: {
                data: role_data,
                schema: {
                    model: {
                        fields: {
                            out_activity_desc: { editable: false },
                            out_add_perm: { editable: false },
                            out_mod_perm: { editable: false },
                            out_view_perm: { editable: false },
                            out_auth_perm: { editable: false },
                            out_inactivate_perm: { editable: false },
                            out_print_perm: { editable: false },
                            out_deny_perm: { editable: false },
                        }
                    }
                },
            },
            height: 180,
            sortable: true,
            columns: [
                {
                    field: "out_usermenu_rowid",
                    title: "Row Id",
                    width: 10,
                    hidden: true,
                },
                {
                    field: "out_activity_code",
                    title: "Activity code",
                    width: 10,
                    hidden: true,
                },
                {
                    field: "out_activity_desc",
                    title: "Activity Desc",
                    width: 150,
                },
                {
                    field: "out_add_perm",
                    title: "Add",
                    template: '<input type="checkbox" #= out_add_perm == "1" ? "checked=checked" : "" # class="chkbx1" ></input>',
                    update: true,
                    width: 90
                },
                {
                    field: "out_mod_perm",
                    title: "Modify",
                    template: '<input type="checkbox" #= out_mod_perm == "1" ? "checked=checked" : "" # class="chkbx2" ></input>',
                    update: true,
                    width: 90
                },
                {
                    field: "out_view_perm",
                    title: "View Only",
                    template: '<input type="checkbox" #= out_view_perm == "1" ? "checked=checked" : "" # class="chkbx3" ></input>',
                    update: true,
                    width: 90
                },
                {
                    field: "out_auth_perm",
                    title: "Authorize",
                    template: '<input type="checkbox" #= out_auth_perm == "1" ? "checked=checked" : "" # class="chkbx4" ></input>',
                    update: true,
                    width: 90
                },
                {
                    field: "out_inactivate_perm",
                    title: "Inactivate",
                    template: '<input type="checkbox" #=out_inactivate_perm=="1"? "checked=checked": "" # class="chkbx5" ></input>',
                    update: true,
                    hidden:true,
                    width: 90
                },
                {
                    field: "out_print_perm",
                    title: "Print",
                    template: '<input type="checkbox" #= out_print_perm == "1" ? "checked=checked" : "" # class="chkbx6" ></input>',
                    update: true,
                    width: 90
                },
                {
                    field: "out_deny_perm",
                    title: "Deny",
                    template: '<input type="checkbox" #= out_deny_perm == "1" ? "checked=checked" : "" # class="chkbx7" ></input>',
                    update: true,
                    width: 90
                }],
            editable: true
        });
    }



    function create_new() {
        clear_val();
        var formval = form_Serialize("user_form");
        var obj_val = JSON.parse(formval);
        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: "/UserDefinition/userDefinitionList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_list(response.context.list);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_user([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        $("#modevalue").text("New Mode");
        $("#DocStat").val("New");
        $("#txtUserId").removeAttr("readonly");
        document.getElementById("Profile_img").src = "/images/noimage.png";
        $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');

    }
    function ondelete() {
        var kendoWindow = $("<div />").kendoWindow({
            title: "Confirm",
            width: "350px",
            height: "130px",
            resizable: false,
            modal: true
        });
        kendoWindow.data("kendoWindow")
            .content($("#grid_delete-confirmation").html())
            .center().open();
        kendoWindow
            .find(".grid_delete-confirm,.grid_delete-cancel")
            .click(function () {
                if ($(this).hasClass("grid_delete-confirm")) {
                    var grid = $("#grid_user_list").data("kendoGrid");
                    var selectedItem = grid.dataItem(grid.select());
                    var formval = form_Serialize("user_form1");
                    var obj_val = JSON.parse(formval);                    
                    obj_val.In_user_code = selectedItem.user_code;                   
                    obj_val.In_mode_flag = "D";
                    $("#txtMode").val('D');
                    var data = {};
                    data.context = getContext();
                    data.context.Header = obj_val;
                    var Context = data.context;
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                        url: "/UserDefinition/SaveUser",
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {
                            console.log(response)
                            var Res = JSON.parse(response);
                            //if (Res.context != null)
                            if (Res.applicationException.errorDescription == null || Res.applicationException.errorDescription == "") {
                                var mode = $("#txtMode").val();
                                if (mode == "I") {
                                    kendoAlert("User Definition  Details saved successfully");
                                    $("#dialog").data("kendoWindow").close();
                                    list();


                                }
                                else if (mode == "D") {
                                    kendoAlert("User Definition  Details Deleted successfully");
                                    get_user_details($("#txtUserId").val());
                                    list();
                                }
                                else {
                                    kendoAlert("User Definition  Details saved successfully");
                                    get_user_details($("#txtUserId").val());
                                    //retrieve_userrole_list();
                                    //list();
                                }
                            }
                            else {
                                kendoAlert(Res.applicationException.errorDescription);
                            }
                        },
                        error: function (er) {
                            alert(er)
                            console.log(er)
                        }

                    });
                }
                kendoWindow.data("kendoWindow").close();
            });
    }

    function retrieve_userrole_combo() {
        var formval = form_Serialize("user_form");
        var obj_val = JSON.parse(formval);
        obj_val.user_id = ".";


        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;

        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, user_id: Context.Header.In_user_id, role_code: Context.Header.In_role_code }),
            url: "/UserDefinition/userroleactivtyList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userroleactivity_detail(response.context.detail);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_user_details([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });

    }

    function save() {
        save_Image();
    }


    function save_user(mode) {
        debugger;
        if ($("#txtMode").val() == "") {
            $("#txtMode").val('I');
        }
        if ($("#DocStat").val() == "Active") {
            $("#txtMode").val('U');
        }

        if (mode != undefined) {
            $("#txtMode").val('D');
        }
        var formval = form_Serialize("user_form");
        var obj_val = JSON.parse(formval);
        if (obj_val.In_user_name == "") {
            kendoAlert("User Name Cannot Be Blank");
            return false;
        }
        if (obj_val.In_user_code == "") {
            kendoAlert("User Code Cannot Be Blank");
            return false;
        }
        if (obj_val.In_valid_till == "") {
            kendoAlert("User Valid Till Cannot Be Blank");
            return false;
        }
        if (obj_val.In_email_id == "") {
            kendoAlert("Email Id Cannot Be Blank");
            return false;
        }
        if (obj_val.In_role_code == "") {
            kendoAlert("Role Cannot Be Blank");
            return false;
        }
        if (obj_val.In_contact_no == "") {
            kendoAlert("Mobile No Cannot Be Blank");
            return false;
        }
        if (obj_val.In_orgn_code == "") {
            kendoAlert("Belongs To Cannot Be Blank");
            return false;
        }
        if (obj_val.In_user_pwd == "") {
            kendoAlert("Password Cannot Be Blank");
            return false;
        }

        if (obj_val.hasOwnProperty('In_valid_till')) {
            if (obj_val.In_valid_till != '')
                obj_val.In_valid_till = getFormated_StringDate(obj_val.In_valid_till);
        }
        obj_val.In_profile_photo = $("#txtImageHidden").val()


        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
            url: "/UserDefinition/SaveUser",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                console.log(response)
                var Res = JSON.parse(response);
                //if (Res.context != null)
                if (Res.applicationException.errorDescription == null || Res.applicationException.errorDescription == "") {
                    var mode = $("#txtMode").val();
                    if (mode == "I") {
                        kendoAlert("User Definition  Details saved successfully");
                        $("#dialog").data("kendoWindow").close();
                        list();
                        
                      
                    }
                    else if (mode == "D") {
                        kendoAlert("User Definition  Details inactivate successfully");
                        get_user_details($("#txtUserId").val());
                        list();
                    }
                    else {
                        kendoAlert("User Definition  Details saved successfully");
                        get_user_details($("#txtUserId").val());
                        list();
                        //retrieve_userrole_list();
                    }
                }
                else {
                    kendoAlert(Res.applicationException.errorDescription);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }

    function DeleteDetails() {
        $("#txtMode").val('D');
        save_user("D");
    }
    function list() {
        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: "/UserDefinition/userDefinitionList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_userrole_list(response.context.list);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_user([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>

<script>
    $(function () {
        $('#grid_user_detail').on('click', '.chkbx1', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_add_perm', '1');
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find("td:eq(5) input").prop("checked", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find("td:eq(6) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_add_perm', '0');
            }
        })
        $('#grid_user_detail').on('click', '.chkbx2', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_mod_perm', '1');
                if (dataItem.out_add_perm == '0') {
                    dataItem._set('out_add_perm', '1');
                    row.find("td:eq(3) input").prop("checked", true);
                }
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find("td:eq(5) input").prop("checked", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find("td:eq(6) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_mod_perm', '0');
            }
        })
        $('#grid_user_detail').on('click', '.chkbx5', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_inactivate_perm', '1');
                if (dataItem.out_add_perm == '0') {
                    dataItem._set('add_perm', '1');
                    row.find("td:eq(3) input").prop("checked", true);
                }
                if (dataItem.out_mod_perm == '0') {
                    dataItem._set('out_mod_perm', '1');
                    row.find("td:eq(4) input").prop("checked", true);
                }

                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find("td:eq(5) input").prop("checked", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find("td:eq(6) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_inactivate_perm', '0');
            }
        })

        $('#grid_user_detail').on('click', '.chkbx6', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_print_perm', '1');
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_print_perm', '0');
            }
        })
        $('#grid_user_detail').on('click', '.chkbx3', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_view_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find("td:eq(3) input").prop("checked", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find("td:eq(4) input").prop("checked", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find("td:eq(7) input").prop("checked", false);
                }
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find("td:eq(6) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_view_perm', '0');
            }
        })
        $('#grid_user_detail').on('click', '.chkbx7', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_deny_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find("td:eq(3) input").prop("checked", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find("td:eq(4) input").prop("checked", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find("td:eq(7) input").prop("checked", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find("td:eq(6) input").prop("checked", false);
                }
                if (dataItem.out_print_perm == '1') {
                    dataItem._set('out_prn_perm', '0');
                    row.find("td:eq(8) input").prop("checked", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find("td:eq(5) input").prop("checked", false);
                }

            }
            else {
                dataItem._set('out_deny_perm', '0');
            }
        })
        $('#grid_user_detail').on('click', '.chkbx4', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_user_detail').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_auth_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find("td:eq(3) input").prop("checked", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find("td:eq(4) input").prop("checked", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find("td:eq(7) input").prop("checked", false);
                }
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find("td:eq(9) input").prop("checked", false);
                }
            }
            else {
                dataItem._set('out_auth_perm', '0');
            }
        })
    })
</script>

<style>
    /*#grid_user_detail input[type=checkbox] {
        margin: 4px 37px 0;
    }*/

    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>