#pragma checksum "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\RoleDefinition\RoleDefinitionForm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "50bcc37b6af47d78f78f1ef214825a3213e42437"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_RoleDefinition_RoleDefinitionForm), @"mvc.1.0.view", @"/Views/RoleDefinition/RoleDefinitionForm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\_ViewImports.cshtml"
using Kiosk_web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\_ViewImports.cshtml"
using Kiosk_web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"50bcc37b6af47d78f78f1ef214825a3213e42437", @"/Views/RoleDefinition/RoleDefinitionForm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d42bb5d0362289165b786aff1563b18b446af8d9", @"/Views/_ViewImports.cshtml")]
    public class Views_RoleDefinition_RoleDefinitionForm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/common.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("rolescreen_form1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Save"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("shade"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor:pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/save-finals.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onclick", new global::Microsoft.AspNetCore.Html.HtmlString("save()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("rolescreen_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\RoleDefinition\RoleDefinitionForm.cshtml"
  
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "50bcc37b6af47d78f78f1ef214825a3213e424377921", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    span.k-widget.k-combobox.k-header.form-control {
        width: 111%;
    }

    .top-inner {
       
        overflow-x: hidden;
    }

    .k-window-titlebar {
        background-color: snow;
    }
    .k-grid tr td {
        border-bottom: 1px solid #c5c5c5;
    }

</style>
<div class=""box-header text-center with-border"">
    <h6 class=""box-title"" style=""text-align:center;color:red;font-weight: 600;"">Role List</h6>
</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50bcc37b6af47d78f78f1ef214825a3213e424379502", async() => {
                WriteLiteral("\r\n    <div class=\"panel panel-default\">\r\n");
                WriteLiteral(@"        <div class=""row"">
            <!-- Left col -->
            <div class=""col-sm-12"">
                <!-- Custom tabs (Charts with tabs)-->
                <div id=""grid_role"">
                </div>
            </div>
        </div>

    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<div id=\"dialog\" class=\"top-inner\" ");
            WriteLiteral(" style=\"background-color:white;\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "50bcc37b6af47d78f78f1ef214825a3213e4243711526", async() => {
                WriteLiteral("\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-3\">\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <h6 style=\"text-align:center;color:red;font-size:19px;\">Role Vs Access Previlege</h6>\r\n");
                WriteLiteral("            </div>\r\n            <div class=\"col-sm-3\" id=\"rolemenu\">\r\n                <div style=\"float:right;margin-right: -50px;\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "50bcc37b6af47d78f78f1ef214825a3213e4243712226", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
        </div>
        <hr />
        <div class=""row"" style=""margin-left: -9px;"">
            <div class=""col-sm-3"">
                <label class=""title"">Role Code</label>
                <input type=""text"" id=""txt_RoleId"" name=""in_role_code"" class=""form-controls"">
            </div>
            <div class=""col-sm-3"">
                <label class=""title"">Role Name</label>
                <input type=""text"" name=""in_role_name"" id=""txt_RoleName"" class=""form-controls"" placeholder=""Input"">
            </div>
            <div class=""col-sm-2"">
                <label class=""title"">Status</label><br />
                <input id=""txt_status_desc"" name=""in_status_code""  data-role=""filtercombo"" >
            </div>
            <div class=""col-sm-2"">
                <label class=""title"">Organization Level:</label><br />
                <input id=""cmb_OrgLevel"" name=""in_orgn_level""   data-role=""filtercombo"" >
            </div>
        </div>
        <div");
                WriteLiteral(@" class=""row"">
            <div class=""col-sm-3"" style="" display:none"">
                <div class=""form-group"" style="" display:none"">
                    <label for=""txtMode"" class=""col-sm-5 control-label"">Mode Flag</label>
                    <div class=""col-sm-7"">
                        <input type=""text"" id=""txtMode"" name=""in_mode_flag"" class=""form-control"">
                        <input type=""hidden"" id=""txt_Role_rowid"" name=""inout_role_rowid"">
                        <input type=""hidden"" id=""txt_timestamp"" name=""in_row_timestamp"">
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-sm-11"" style=""padding:20px 0px 0px 20px;width:871px;"" >
");
                WriteLiteral("                            <div id=\"grid_role_list\">\r\n");
                WriteLiteral("                </div>\r\n            </div>\r\n        </div>\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</div>


<script>
    $(document).ready(function () {
        //var size = [window.width, window.height];  //public variable

        //$(window).resize(function () {
        //    window.resizeTo(size[0], size[1]);
        //});

        $(""#dialog"").hide();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#rolescreen_form"");
        kendo.init(container);
        container.kendoValidator({
        });



        //$('body').bind('dblclick', function (e) {
        //    e.preventDefault();
        //});

        load_master_code();

        var list_in = """";
        $(""#cmb_OrgLevel"").empty();
        list_in = grid_comboScreen_mastercodes(""ORG_TYPE"");
        filter_combobox(""cmb_OrgLevel"", list_in);
        $('#cmb_OrgLevel').data(""kendoComboBox"").value(958);

        var list_in1 = """";
        $(""#txt_status_desc"").empty();
        list_in1 = grid_comboScreen_mastercodes(""STATUS"");
        filter_combobox(""txt_status_desc"", ");
            WriteLiteral(@"list_in1);
        $('#txt_status_desc').data(""kendoComboBox"").value(956);

        grid_role([]);
        grid_permission([]);

        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: ""/RoleDefinition/RoleDefinitionList"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_roleactivity_list(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
               ");
            WriteLiteral(@" console.log(er)
            }

        });
        Screen_Id = ""ROLE"";
        permission = sec_Master_Permission(Screen_Id);
    });
    function load_master_code() {
        try {
            var data = {};
            data.screen_Id = ""ROLE"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function list() {
        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: ""/RoleDefinition/RoleDefinitionList"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (resp");
            WriteLiteral(@"onse.context != null) {
                    generate_roleactivity_list(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }
</script>

<script>
    //function closerole() {
    //   $(""#dialog"").data(""kendoWindow"").close();
    //}

    function serialno() {
        debugger
        $(""#dialog"").kendoWindow();
        var dialog = $(""#dialog"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 480, width: 900
                  
          
        });
        dialog.title(""Role Vs Access Previlege"");
        dialog.bind(""open"", serialno);

        //add pop up close
        dialog.unbind(""close"");
        dialog.bind(""clo");
            WriteLiteral(@"se"", onWindowEditClose);

        create_new();  

        $(document).on('dblclick', '.k-window-titlebar', function (e) {
            debugger;
            // Restore old size
            dialog.toggleMaximization();
            
        });


        
    }

    //pop up close refresh
    var onWindowEditClose = function (e) {
        debugger;

        var data = {};
        data.context = getContext();
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: ""/RoleDefinition/RoleDefinitionList"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_roleactivity_list(response.context.List);
                    //SetPager(r");
            WriteLiteral(@"esponse.context.Filter.out_record_count)
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });

    };




 
    function grid_role(data) {
        $(""#grid_role"").kendoGrid({
            dataSource: {
                data: data, //  pageSize: 20
            },
            height: 470,
            sortable: true,
            selectable: true,
            filterable: true,
            //change: onChangeSelection,
            selectable: ""singl"",   //  Grid Row Selection
            navigatable: true,
            toolbar: ""<a class='k-grid-add' id='Assign_sevices' onClick='serialno()'><span class='fa fa-plus' style='color:Black'></span></a>"",
            columns: [
                {
                    field: ""out_orgn_level"",
                    title: ""Role Id"",
                    hidden: true,
     ");
            WriteLiteral(@"               width: 30
                },
                {
                    field: ""out_orgn_level_desc"",
                    title: ""Org Level Desc"",
                    hidden: true,
                    width: 30
                },
                {
                    field: ""out_role_code"",
                    title: ""Role Code"",
                    width: 30
                },
                {
                    field: ""out_role_name"",
                    title: ""Role Name"",
                    width: 30
                },
                {
                    field: ""out_role_rowid"",
                    title: ""Role RowId"",
                    hidden: true,
                    width: 30
                },
                {
                    field: ""out_status_code"",
                    title: ""Status Code"",
                    hidden: true,
                    width: 30
                },
                {
                    field: ""out_status_desc"",
          ");
            WriteLiteral(@"          title: ""Status"",
                    width: 30
                }, {
                    command: [
                        {
                            name: ""View"",
                            text: ""<span class='fa fa-eye' style ='color:#357ab8;'onClick='onview()'></span>""
                        },
                        {
                            name: ""Edit"" ,
                            text: ""<span class='fa fa-pencil' style='color:#357ab8' onClick='onChangeSelection()'></span>""
                        },
                        //{
                        //    name: ""Delete"",                                                     
                        //    text: ""<span class='fa fa-times' style='color:#357ab8;padding-left:2px' onClick='ondelete()'></span>""                           
                        //},
                        {
                            name: ""Delete1"",
                            text: ""<span class='fa fa-times' style='color:#357ab8;paddi");
            WriteLiteral(@"ng-left:2px' onClick='ondelete()'></span>""
                        },
                    ], title: ""Action"", width: ""25px"",
                },
                ]
        });
        load_master_code();
    }

    function grid_permission(role_data) {
        $(""#grid_role_list"").kendoGrid({
            dataSource: {
                data: role_data,
                schema: {
                    model: {
                        fields: {
                            out_activity_desc: { editable: false },
                            out_add_perm: { editable: false },
                            out_mod_perm: { editable: false },
                            out_view_perm: { editable: false },
                            out_auth_perm: { editable: false },
                            out_inactivate_perm: { editable: false },
                            out_print_perm: { editable: false },
                            out_deny_perm: { editable: false },
                        }
            ");
            WriteLiteral(@"        }
                },
            },
            height: 280,
            sortable: true,
            columns: [
                {
                    field: ""out_rolemenu_rowid"",
                    title: ""Row Id"",
                    width: 10,
                    hidden: true,
                },
                {
                    field: ""out_activity_code"",
                    title: ""Activity code"",
                    width: 10,
                    hidden: true,
                },
                {
                    field: ""out_activity_desc"",
                    title: ""Menu/Screens"",
                    width: 100,
                },
                {
                    field: ""out_add_perm"",
                    title: ""Add"",
                    template: '<input type=""checkbox"" #= out_add_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx1"" ></input>',
                    update: true,
                    width: 50
                },
                {
    ");
            WriteLiteral(@"                field: ""out_mod_perm"",
                    title: ""Modify"",
                    template: '<input type=""checkbox"" #= out_mod_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx2"" ></input>',
                    update: true,
                    width: 50
                },
                {
                    field: ""out_view_perm"",
                    title: ""View Only"",
                    template: '<input type=""checkbox"" #= out_view_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx3"" ></input>',
                    update: true,
                    width: 50
                },
                {
                    field: ""out_auth_perm"",
                    title: ""Authorize"",
                    template: '<input type=""checkbox"" #= out_auth_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx4"" ></input>',
                    update: true,
                    width: 50,
                },
                {
                    field: ""out_inactivate_perm"",
         ");
            WriteLiteral(@"           title: ""Inactivate"",
                    template: '<input type=""checkbox"" #=out_inactivate_perm==""1""? ""checked=checked"": """" # class=""chkbx5"" ></input>',
                    update: true,
                    hidden: true,
                    width: 50
                },
                {
                    field: ""out_print_perm"",
                    title: ""Print"",
                    template: '<input type=""checkbox"" #= out_print_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx6"" ></input>',
                    update: true,
                    width: 50
                },
                {
                    field: ""out_deny_perm"",
                    title: ""Deny"",
                    template: '<input type=""checkbox"" #= out_deny_perm == ""1"" ? ""checked=checked"" : """" # class=""chkbx7"" ></input>',
                    update: true,
                    width: 30
                }],
            editable: true
        });
    }

    function onview() {
       // $(""#rolem");
            WriteLiteral(@"enu"").hide();
        onChangeSelection();
        $(""#rolemenu"").hide();
    }
    function ondelete() {       
        var kendoWindow = $(""<div />"").kendoWindow({
            title: ""Confirm"",
            width: ""350px"",
            height: ""130px"",
            resizable: false,
            modal: true
        });
        kendoWindow.data(""kendoWindow"")
            .content($(""#grid_delete-confirmation"").html())
            .center().open();
        kendoWindow
            .find("".grid_delete-confirm,.grid_delete-cancel"")
            .click(function () {
                if ($(this).hasClass(""grid_delete-confirm"")) {
                    var grid = $(""#grid_role"").data(""kendoGrid"");
                    var selectedItem = grid.dataItem(grid.select());
                    var formval = form_Serialize(""rolescreen_form1"");
                    var obj_val = JSON.parse(formval);
                    obj_val.inout_role_rowid = selectedItem.out_role_rowid;
                    obj_val.in_role_c");
            WriteLiteral(@"ode = selectedItem.out_role_code;
                    obj_val.in_role_name = selectedItem.out_role_name;
                    obj_val.in_mode_flag = ""D"";
                    var data = {};
                    data.context = getContext();
                    data.context.Header = obj_val;
                    data.context.Detail = [];
                    var Context = data.context;
                    $.ajax({
                        type: ""POST"",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                        url: ""/RoleDefinition/SaveRole"",
                        dataType: ""json"",
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {
                            console.log(response)
                            var Res = JSON.parse(response);
                        ");
            WriteLiteral(@"    if (Res.applicationException.errorDescription == null) {
                                console.log(Res);
                                kendoAlert(""Deleted Succedfully"");
                                list();

                            }
                            else {
                                kendoAlert(Res.applicationException.errorDescription);
                            }
                        },
                        error: function (er) {
                            alert(er)
                            console.log(er)
                        }

                    });
                }
                kendoWindow.data(""kendoWindow"").close();
            });
    }
    function onChangeSelection() {
        $(""#rolemenu"").show();
        debugger;
        $(""#dialog"").kendoWindow();
        var dialog = $(""#dialog"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 480, wi");
            WriteLiteral(@"dth: 900
        });
        dialog.title(""Role Vs Access Previlege"");
        dialog.bind(""open"", serialno);
        var grid = $(""#grid_role"").data(""kendoGrid"");
        var selectedItem = grid.dataItem(grid.select());
        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
        obj_val.role_rowid = selectedItem.out_role_rowid;
        obj_val.orgn_level = selectedItem.out_orgn_level;
        $(""#txt_Role_rowid"").val(selectedItem.out_role_rowid);
        var data1 = {};
        data1.context = getContext();;
        data1.context.Header = obj_val;
        var Context = data1.context;
        var role_rowid = obj_val.role_rowid;
        var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, role_rowid: obj_val.role_rowid, orgn_level: obj_val.orgn_level};

        $.ajax({

          url: '");
#nullable restore
#line 538 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\RoleDefinition\RoleDefinitionForm.cshtml"
           Write(Url.Action("RoleDefinitionfetch", "RoleDefinition"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
                debugger;
                if (response1 != null) {
                    generate_roleactivity_header(response1.context.header);
                    generate_roleactivity_detail(response1.context.detail);
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });

    }

    function get_role_details(id) {
        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
        obj_val.role_rowid = id;
        obj_val.orgn_level = ""."";

        var data1 = {};
        data1.context = getContext();
        data1.context.Header = obj_val;
        var Context = data1.context;
        var data = { userId: Context.userId, orgn");
            WriteLiteral("Id: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, role_rowid: obj_val.role_rowid, orgn_level: obj_val.orgn_level };\r\n\r\n        $.ajax({\r\n\r\n          url: \'");
#nullable restore
#line 574 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\RoleDefinition\RoleDefinitionForm.cshtml"
           Write(Url.Action("RoleDefinitionfetch", "RoleDefinition"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
                debugger;
                if (response1 != null) {
                    generate_roleactivity_header(response1.context.header);
                    generate_roleactivity_detail(response1.context.detail);
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
        $(""#txt_Role_rowid"").val(id);
    }

</script>

<script>



</script>


<script>
    function generate_roleactivity_list(res) {
        var data = changedataType(res);
        grid_role(data);
    }


    function generate_roleactivity_header(res) {
        $(""#txt_RoleId"").val(res.out_role_code);
        //$(""#txt_RoleId"").attr(""readonly"", """");
        $(""#txt_RoleName"").val(res.");
            WriteLiteral(@"out_role_name);
        $('#cmb_OrgLevel').data(""kendoComboBox"").value(res.inout_orgn_level);
        $(""#txt_status_code"").val(res.out_status_code);
        $(""#txt_status_desc"").val(res.out_status_desc);
        $(""#txtMode"").val(res.out_mode_flag);
        //$(""#txt_Role_rowid"").val(res.out_role_rowid);
        $(""#txt_timestamp"").val(res.out_row_timestamp);
        //$(""#modevalue"").text(""Edit Mode"");
        $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');
    }


    function generate_roleactivity_detail(res) {
        var data = changedataType(res);
        grid_permission(data);
    }

    function create_new() {
        debugger;
        clear_val();
      
        $(""#rolemenu"").show();
        var formval = form_Serialize(""rolescreen_form1"");
        var obj_val = JSON.parse(formval);
        obj_val.role_rowid = ""0"";
        obj_val.orgn_level = ""."";
        if (obj_val.in_row_timestamp == null || obj_val.in_row_timestamp == """" || obj_va");
            WriteLiteral(@"l.in_row_timestamp == undefined) {
            obj_val.in_row_timestamp = ""2000-01-01"";
        }

        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, role_rowid: obj_val.role_rowid, orgn_level: obj_val.orgn_level };

        $.ajax({

          url: '");
#nullable restore
#line 653 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\RoleDefinition\RoleDefinitionForm.cshtml"
           Write(Url.Action("RoleDefinitionfetch", "RoleDefinition"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
                debugger;
                if (response1 != null) {
                    generate_roleactivity_header(response1.context.header);
                    generate_roleactivity_detail(response1.context.detail);
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
        $('#cmb_OrgLevel').data(""kendoComboBox"").value(958);
        var data1 = {};
        data1.context1 = getContext();;
        var Context1 = data1.context1;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context1.userId, orgnId: Context1.orgnId, locnId: Context1.locnId, localeId: Context1.localeId }),
            url: ""/RoleDefinition/RoleDefinitionList"",
 ");
            WriteLiteral(@"           dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_roleactivity_list(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                    //$(""#txt_RoleId"").removeAttr(""readonly"");
                }
                else {
                    grid_permission([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        $(""#modevalue"").text(""New Mode"");

        $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');

    }

    function clear_val() {
        $(""#txt_RoleId"").val('');
        $(""#txt_RoleName"").val('');
        $('#cmb_OrgLevel').data(""kendoComboBox"").value('');
        grid_permission([]);
    }

    func");
            WriteLiteral(@"tion save() {
        debugger;
        if ($(""#txt_Role_rowid"").val() == """") {
            $(""#txt_Role_rowid"").val('0');
        }

        if ($(""#txtMode"").val() == ""S"") {
            $(""#txtMode"").val('U');
        }

        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
        if (obj_val.in_row_timestamp == null || obj_val.in_row_timestamp == """" || obj_val.in_row_timestamp == undefined) {
            obj_val.in_row_timestamp = ""2000-01-01"";
        }
        var grid_val = JSON.stringify($(""#grid_role_list"").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);
        result.rolemenu_rowid = ""0"";
        $.each(result, function (index, value) {
            var row_id = value.rolemenu_rowid;
            if (row_id == undefined) {
                result[index].rolemenu_rowid = ""0"";
            }
        });
        var obj_grid_val = result;


        var data = {};
    ");
            WriteLiteral(@"    data.context = getContext();
        data.context.Header = obj_val;
        data.context.Detail = obj_grid_val;
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
            url: ""/RoleDefinition/SaveRole"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                console.log(response)
                var Res = JSON.parse(response);
                //if (Res.applicationException.errorDescription != """") {
               // if (Res.applicationException != null) { 
             // if (applicationException != null) {
                    debugger;
                if (Res.applicationException.errorDescription == null) {
                    debugger;
                        console.log(Res);
");
            WriteLiteral(@"                        kendoAlert(""Saved Succedfully"");

                        get_role_details(Res.context.header.inout_role_rowid);
                        $(""#dialog"").data(""kendoWindow"").close();
                  //  list();
                   
                        // generate_farmer_registration_header(Res.context.header);

                    setTimeout(function () {
                        debugger;
                        window.location.href = '../RoleDefinition/RoleDefinitionForm';
                            
                    },1000);
                   
                    }
                else {
                    debugger;
                        kendoAlert(Res.applicationException.errorDescription);
                   list();
                   // window.location.href = '../RoleDefinition/RoleDefinitionForm';
                    }
                //}
                //else {
                //    kendoAlert(""Duplicate Role"");
                //}
            ");
            WriteLiteral(@"},
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }


    function DeleteDetails() {
        $(""#txtMode"").val('D');
        save();
    }
</script>

<script>
    $(function () {
        $('#grid_role_list').on('click', '.chkbx1', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_add_perm', '1');
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find(""td:eq(5) input"").prop(""");
            WriteLiteral(@"checked"", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find(""td:eq(6) input"").prop(""checked"", false);
                }
            }
            else {
                dataItem._set('out_add_perm', '0');
            }
        })
        $('#grid_role_list').on('click', '.chkbx2', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_mod_perm', '1');
                if (dataItem.out_add_perm == '0') {
                    dataItem._set('out_add_perm', '1');
                    row.find(""td:eq(3) input"").prop(""checked"", true);
                }
                if (dataItem.out_deny_perm == '1') {
                    dataItem._se");
            WriteLiteral(@"t('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find(""td:eq(5) input"").prop(""checked"", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find(""td:eq(6) input"").prop(""checked"", false);
                }
            }
            else {
                dataItem._set('out_mod_perm', '0');
            }
        })
        $('#grid_role_list').on('click', '.chkbx5', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_inactivate_perm', '1')");
            WriteLiteral(@";
                if (dataItem.out_add_perm == '0') {
                    dataItem._set('add_perm', '1');
                    row.find(""td:eq(3) input"").prop(""checked"", true);
                }
                if (dataItem.out_mod_perm == '0') {
                    dataItem._set('out_mod_perm', '1');
                    row.find(""td:eq(4) input"").prop(""checked"", true);
                }

                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find(""td:eq(5) input"").prop(""checked"", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find(""td:eq(6) input"").prop(""checked"", false);
                }
            }");
            WriteLiteral(@"
            else {
                dataItem._set('out_inactivate_perm', '0');
            }
        })

        $('#grid_role_list').on('click', '.chkbx6', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_print_perm', '1');
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
            }
            else {
                dataItem._set('out_print_perm', '0');
            }
        })
        $('#grid_role_list').on('click', '.chkbx3', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = gr");
            WriteLiteral(@"id.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_view_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find(""td:eq(3) input"").prop(""checked"", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find(""td:eq(4) input"").prop(""checked"", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find(""td:eq(7) input"").prop(""checked"", false);
                }
                if (dataItem.out_deny_perm == '1') {
                    dataItem._set('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
                if (dataItem.ou");
            WriteLiteral(@"t_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find(""td:eq(6) input"").prop(""checked"", false);
                }
            }
            else {
                dataItem._set('out_view_perm', '0');
            }
        })
        $('#grid_role_list').on('click', '.chkbx7', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_deny_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find(""td:eq(3) input"").prop(""checked"", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find(""td:eq(4) inp");
            WriteLiteral(@"ut"").prop(""checked"", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find(""td:eq(7) input"").prop(""checked"", false);
                }
                if (dataItem.out_auth_perm == '1') {
                    dataItem._set('out_auth_perm', '0');
                    row.find(""td:eq(6) input"").prop(""checked"", false);
                }
                if (dataItem.out_print_perm == '1') {
                    dataItem._set('out_prn_perm', '0');
                    row.find(""td:eq(8) input"").prop(""checked"", false);
                }
                if (dataItem.out_view_perm == '1') {
                    dataItem._set('out_view_perm', '0');
                    row.find(""td:eq(5) input"").prop(""checked"", false);
                }

            }
            else {
                dataItem._set('out_deny_perm', '0');
            }
        })
        $('#grid_role_list').on('");
            WriteLiteral(@"click', '.chkbx4', function () {
            var checked = $(this).is(':checked');
            var grid = $('#grid_role_list').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            var row = $(this).closest('tr');
            if (checked == true) {
                dataItem._set('out_auth_perm', '1');
                if (dataItem.out_add_perm == '1') {
                    dataItem._set('out_add_perm', '0');
                    row.find(""td:eq(3) input"").prop(""checked"", false);
                }
                if (dataItem.out_mod_perm == '1') {
                    dataItem._set('out_mod_perm', '0');
                    row.find(""td:eq(4) input"").prop(""checked"", false);
                }
                if (dataItem.out_inactivate_perm == '1') {
                    dataItem._set('out_inactivate_perm', '0');
                    row.find(""td:eq(7) input"").prop(""checked"", false);
                }
                if (dataItem.out_deny_perm == '1') {
   ");
            WriteLiteral(@"                 dataItem._set('out_deny_perm', '0');
                    row.find(""td:eq(9) input"").prop(""checked"", false);
                }
            }
            else {
                dataItem._set('out_auth_perm', '0');
            }
        })
    })
</script>
<style>
    #grid_role_list input[type=checkbox] {
        margin: 4px 37px 0;
    }

    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
