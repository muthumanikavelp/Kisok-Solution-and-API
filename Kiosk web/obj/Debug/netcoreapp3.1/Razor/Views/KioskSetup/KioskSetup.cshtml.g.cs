#pragma checksum "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\KioskSetup\KioskSetup.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cb77c8f8309139bccf31df1ea8ddec71aa84cddb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_KioskSetup_KioskSetup), @"mvc.1.0.view", @"/Views/KioskSetup/KioskSetup.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\_ViewImports.cshtml"
using Kiosk_web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\_ViewImports.cshtml"
using Kiosk_web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cb77c8f8309139bccf31df1ea8ddec71aa84cddb", @"/Views/KioskSetup/KioskSetup.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d42bb5d0362289165b786aff1563b18b446af8d9", @"/Views/_ViewImports.cshtml")]
    public class Views_KioskSetup_KioskSetup : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/common.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("rolescreen_form1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Save"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("shade"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("cursor:pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/save-finals.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("soilsave"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onclick", new global::Microsoft.AspNetCore.Html.HtmlString("save()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Attachments"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/attach-finals.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onclick", new global::Microsoft.AspNetCore.Html.HtmlString("attach()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Notes"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/notes-finals.jpg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("notes"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onClick", new global::Microsoft.AspNetCore.Html.HtmlString("notessave()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin-left: 70%;cursor:pointer;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("rolescreen_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("soilcontactsave"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onClick", new global::Microsoft.AspNetCore.Html.HtmlString("ContactDetailssave()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("rolescreencontact"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\KioskSetup\KioskSetup.cshtml"
  
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb12114", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

    <style>
        .k-window-titlebar {
            background-color: snow;
        }
        span.k-widget.k-combobox.k-header.form-control {
            width: 100%;
        }
        .k-grid tr td {
            border-bottom: 1px solid #c5c5c5;
        }
    </style>
<div class=""box-header text-center with-border"">
    <h3 class=""box-title"" style=""text-align:center;color:red;font-weight: 600;"">Kiosk List</h3>
</div>


");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb13678", async() => {
                WriteLiteral("\r\n    <div class=\"panel panel-default\">\r\n");
                WriteLiteral(@"        <div class=""row"">
            <!-- Left col -->
            <div class=""col-lg-12"">
                <!-- Custom tabs (Charts with tabs)-->
                <div id=""grid_role"">
                </div>
            </div>
        </div>

    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
            WriteLiteral("<div id=\"dialog\" ");
            WriteLiteral(" style=\"background-color:white;\">\r\n\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb15753", async() => {
                WriteLiteral(@"
        <div class=""row"">
            <div class=""col-sm-3"">
            </div>
            <div class=""col-sm-4"">
                <h5 style=""text-align:center;color:red;font-size:19px;"">Kiosk Set up</h5>
            </div>
            <div class=""col-sm-3"" id=""rolemenu"">
                <div style=""float:right;margin-right: -30px;"">
");
                WriteLiteral("\r\n");
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb16467", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("&nbsp;\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb18017", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("&nbsp;\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb19481", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"&nbsp;
                </div>
            </div>
        </div>
        <div class=""row"" style=""margin-left: 10px;"">

            <div class=""col-sm-3"">
                <label class=""title"">Kiosk code</label>
                <input type=""text"" id=""txt_KioskId"" name=""in_Kiosk_code"" class=""form-control"" style=""height:5% ;"" readonly>
                <input type=""hidden"" id=""txt_Id"" name=""in_Kiosk_gid"" />
            </div>
            <div class=""col-sm-4"" style=""margin-left:10px;"">
                <label class=""title"">Kiosk Name</label>
                <input type=""text"" name=""in_Kiosk_name"" id=""txt_KioskName"" class=""form-control"" placeholder=""Input"" style=""height:5%"">
            </div>
            <div class=""col-sm-3"" style=""margin-left:10px;"">
                <label class=""title"">Status</label><br />
                <input type=""text"" name=""in_status_name"" id=""txt_status"" data-role=""filtercombo"" class=""form-control"" placeholder=""Select"">
            </div>
        </div>
        <div cla");
                WriteLiteral(@"ss=""row"" style=""margin-left: 10px;margin-top:12px;"">
            <div class=""col-sm-7"" style=""margin-right:32px;"">
                <label class=""title"">FPO Name</label>
                <input type=""text"" name=""in_fpo_name"" id=""txt_FPOName"" class=""form-control"" placeholder=""Input"" style=""width: 108%;height:5%;"">
            </div>
            <div class=""col-sm-3"" style=""margin-left:20px;"">
                <label class=""title"">Bilingual Language</label><br />
                <input id=""txt_Bilingual"" name=""in_Bilingual_code"" data-role=""filtercombo"" class=""form-control"" placeholder=""Select"">
            </div>
        </div>
        <div class=""row"" style=""margin-left: 10px;margin-top:12px;"">
            <div class=""col-sm-4"">
                <label class=""title"">Address</label>
                <input id=""txt_Address"" name=""in_Address"" class=""form-control"">
            </div>
            <div class=""col-sm-3"" style=""margin-left:10px;"">
                <label class=""title"">Pincode</label>
      ");
                WriteLiteral(@"          <input id=""txt_Pincode"" name=""in_Pincode"" class=""form-control"" style=""height:5%"" maxlength=""6"">
            </div>
            <div class=""col-sm-3"" style=""margin-left:10px;"">
                <label class=""title"">Village</label><br />
                <input id=""txt_Village"" name=""in_Village"" data-role=""filtercombo"" class=""form-control"" placeholder=""Select"" onchange=""getonchange(this.value)"">


            </div>
        </div>
        <div class=""row"" style=""margin-left: 10px;margin-top:12px;"">
            <div class=""col-sm-4"">
                <label class=""title"">Taluk</label><br />
                <input id=""cmb_Taluk"" name=""in_Taluk"" data-role=""filtercombo"" class=""form-control"" style=""width:108%"" readonly>
            </div>
            <div class=""col-sm-3"" style=""margin-left:10px;"">
                <label class=""title"">District / City</label><br />
                <input id=""cmb_District"" name=""in_District"" data-role=""filtercombo"" class=""form-control"" style=""width:108%"" readonl");
                WriteLiteral(@"y>
            </div>
            <div class=""col-sm-3"" style=""margin-left: 1%;"">
                <label class=""title"">State</label><br />
                <input id=""cmb_State"" name=""in_State"" data-role=""filtercombo"" class=""form-control"" readonly>
            </div>

        </div>
        <div id=""Notesdialog"" ");
                WriteLiteral(@" style=""background-color:white;display:none;"">
            <div class=""row"">
                <div class=""col-sm-3"">
                </div>
                <div class=""col-sm-4"">
                    <h5 style=""text-align:center;color:red;font-size:14px;"">Notes</h5>
                </div>
                <div class=""col-sm-3"" id=""notesmenu"">
");
                WriteLiteral("                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb25156", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
            <div class=""col-sm-6"" style=""margin-left:25px;"">
                <label for=""remark"" class=""title"">Notes</label>
                <textarea class=""form-control"" rows=""3"" id=""txt_Notes"" name=""in_Notes"" style=""margin: 0px -210.609px 0px 0px; width: 462px; height: 61px;""></textarea>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-sm-3"" style="" display:none"">
                <div class=""form-group"" style="" display:none"">
                    <label for=""txtMode"" class=""col-sm-5 control-label"">Mode Flag</label>
                    <div class=""col-sm-7"">
                        <input type=""text"" id=""txtMode"" name=""in_mode_flag"" class=""form-control"">
                        <input type=""hidden"" id=""txt_Role_rowid"" name=""inout_role_rowid"">
                        <input type=""hidden"" id=""txt_timestamp"" name=""in_row_timestamp"">
                    </div>
                </div>
            </div>
        </d");
                WriteLiteral(@"iv>
        <div class=""row"" style=""margin-left:9px;"">
            <div class=""col-sm-11"" style=""padding:20px 0px 0px 20px"">
                <div class=""tab-content"">
                    <div class=""tab-pane fade active in"" id=""permission"">
                        <div id=""permission"">
                            <div id=""grid_role_list"">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    <div id=\"dialogContact\" ");
            WriteLiteral("   style=\"background-color:white;\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb29646", async() => {
                WriteLiteral(@"
            <div class=""row"">
                <div class=""col-sm-3"">
                </div>
                <div class=""col-sm-4"">
                    <h5 style=""text-align:center;color:red;font-size:20px;"">Contact Details</h5>
                </div>
                <div class=""col-sm-3"" id=""rolemenucontact"">
                    <div style=""float:right;"">
");
                WriteLiteral("                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cb77c8f8309139bccf31df1ea8ddec71aa84cddb30343", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"&nbsp;

                    </div>
                </div>
            </div>
            <div class=""row"" style=""margin-left: 10px;"">
                <div class=""col-sm-4"">
                    <label class=""title"">Name</label>
                    <input type=""text"" id=""txt_Name"" name=""in_txt_Name"" class=""form-control"" style=""height:5%;"">
                    <input type=""hidden"" id=""txt_contactId"" name=""in_contact_gid"" />
                    <input type=""hidden"" id=""txt_kioskId"" name=""in_Kiosk_gid"" />
                </div>
                <div class=""col-sm-3"">
                    <label class=""title"">Designation</label>
                    <input type=""text"" name=""in_txt_Designation"" id=""txt_Designation"" class=""form-control"" placeholder=""Input"" style=""height:5%;"">
                </div>
                <div class=""col-sm-3"" style="" "">
                    <label class=""title"">Mobile</label>
                    <input id=""txt_Mobile"" name=""in_txt_Mobile"" data-role=""filtercombo"" class=""form-co");
                WriteLiteral(@"ntrol"" style=""width: 81%;height: 5%;"" MaxLength=""10"" ;>
                </div>
            </div>
            <div class=""row"" style=""margin-left: 10px;margin-left:-67px;margin-top: 2%;"">



                <div class=""col-sm-5"" style="" margin-left: 8.5%;width: 37%;"">
                    <label class=""title"">Landline</label>
                    <input id=""txt_Landline"" name=""in_txt_Landline"" data-role=""filtercombo"" class=""form-control"" style=""height:5%;"" MaxLength=""10"">
                </div>

                <div class=""col-sm-5"">
                    <label class=""title"">eMail</label>
                    <input type=""text"" name=""in_txt_eMail"" id=""txt_eMail"" class=""form-control"" placeholder=""Input"" style=""height:5%;width:92%;"">
                </div>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n    <div id=\"attachModal\" ");
            WriteLiteral(@" style=""background-color:white"">
        <div class=""row"" style=""padding-top:20px;padding-bottom:20px;padding-left:10px"">
            <div class=""col-sm-3"">
                <label for=""txtcode"" style=""font-weight: normal;"">Browse File</label>
                <input type=""file"" id=""attachfile"" name=""in_parent_code"" class=""form-control"" style=""width:93%;height:20px"">
                <input type=""hidden"" id=""link"" href=""no-script.html"">
            </div>
            <div class=""col-sm-3"">
                <label for=""txtcode"" style=""font-weight: normal;"">Description</label>
                <input type=""text"" id=""txtdes"" name=""in_des_code"" class=""form-control"" style=""width:96%;height:20px"">
                <input type=""hidden"" id=""txt_attach_gid"" name=""attach_gid"" />
");
            WriteLiteral(@"
            </div>
            <div class=""col-sm-3"">
                <label for=""txtcode"" style=""font-weight: normal;"">Document</label>
                <input type=""text"" id=""txtdoc"" name=""in_doc_code"" class=""form-control"" style=""width:90%;height:20px"">
            </div>
            <div class=""col-sm-1"">
                <label></label>
                <button title=""Upload""   id=""button_Attachment"" value=""Upload"" onclick=""save_Image()"" class=""btn btn-primary"" style=""height:1%;margin-top:29%;cursor:pointer;""> <span class=""fa fa-upload""></span></button>
                <a id=""download_exl_template"" download");
            BeginWriteAttribute("href", " href=\"", 13629, "\"", 13636, 0);
            EndWriteAttribute();
            WriteLiteral(@"></a>
            </div>
        </div>
        <div class=""row"" style=""padding-left: 10px"">
            <div class=""col-lg-11"">
                <div id=""grid_attachment"">
                </div>
            </div>
        </div>
    </div>
</div>

    <script>

    $(document).ready(function () {
        debugger;
        $(""#dialog"").hide();
        $(""#dialogContact"").hide();
        $(""#attachModal"").hide();
        $(""#Notesdialog"").hide();


        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#rolescreen_form"");
        kendo.init(container);
        container.kendoValidator({
        });

        load_master_code();
        //Status

        var list_in = """";
        $(""#txt_status"").empty();
        list_in = grid_comboScreen_mastercodes(""STATUS"");
        filter_combobox(""txt_status"", list_in);
        //$('#txt_status').data(""kendoComboBox"").value(956);
        //Language
        var list_in1= """";
     $(""#txt_Bilingual"")");
            WriteLiteral(@".empty();
        list_in1 = grid_comboScreen_mastercodes(""QCD_BILANG"");
        filter_combobox(""txt_Bilingual"", list_in1);
        //village
        var list_in2 = """";
        $(""#txt_Village"").empty();
         list_in2 = grid_comboScreen_mastercodes(""QCD_UN_VILLAGE"");
        filter_combobox(""txt_Village"", list_in2);
        //Taluk
        var list_in3 = """";
        $(""#cmb_Taluk"").empty();
        list_in3 = grid_comboScreen_mastercodes(""QCD_UN_TALUK"");
        filter_combobox(""cmb_Taluk"", list_in3);

        //District
        var list_in4 = """";
        $(""#cmb_District"").empty();
        list_in4 = grid_comboScreen_mastercodes(""QCD_UN_DIST"");
        filter_combobox(""cmb_District"", list_in4);

        //state
        var list_in5 = """";
        $(""#cmb_State"").empty();
        list_in5 = grid_comboScreen_mastercodes(""QCD_UN_STATE"");
        filter_combobox(""cmb_State"", list_in5);
        grid_role([]);
        grid_permission([]);

        var data = {};
        data.contex");
            WriteLiteral(@"t = getContext();
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
            url: ""/KioskSetup/KioskSetupList"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_roleactivity_list(response.context.List);
                  }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        Screen_Id = ""KioskSetup"";
        permission = sec_Master_Permission(Screen_Id);
        grid_attachment([]);
    });
    function load_master_code() {
        debugger;
        try {
           ");
            WriteLiteral(@" var data = {};
            data.screen_Id = ""KioskSetup"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }




        function list() {
            debugger;
            var data = {};
            data.context = getContext();
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId }),
                url: ""/KioskSetup/KioskSetupList"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_roleactivity_list(response.context.List);
                    }");
            WriteLiteral(@"
                    else {
                        grid_role([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }




    function getonchange() {
        debugger;
        var dependcode = $(""#txt_Village"").val();
        var data = {};
        data.context = getContext();
        var Context = data.context;
        if (dependcode == """" || dependcode == null || dependcode == ""undefined"" || dependcode == 0) {
            return false;
        }

        else {

            $.ajax({
                type: ""POST"",

                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                url: '");
#nullable restore
#line 405 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\KioskSetup\KioskSetup.cshtml"
                 Write(Url.Action("KioskSetuponchange", "KioskSetup"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: JSON.stringify({
                    userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, dependcode: dependcode }),

                success: function (data) {
                    debugger;
                     var values = data.context.List;
                     $('#cmb_Taluk').data(""kendoComboBox"").value(values[0].tk_name);
                    $('#cmb_District').data(""kendoComboBox"").value(values[0].dt_name);
                    $('#cmb_State').data(""kendoComboBox"").value(values[0].st_name);
                      }
            });
        }
    }


    </script>

    <script>
    function closerolecontact() {
        debugger;
      //  $(""#dialog"").data(""kendoWindow"").close();
        $(""#dialogContact"").data(""kendoWindow"").close();
        contactlist();
    }


    function closerole() {
         setTimeout(function () {
                    debugger;
                    window.location.href = '../KioskS");
            WriteLiteral(@"etup/KioskSetup';
                },   );
    }

    //kiosk add new
        function serialno() {
            debugger
            $(""#attachModal"").hide();
            $(""#notes"").hide();
       
        $(""#dialog"").kendoWindow();
        var dialog = $(""#dialog"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 70,
            left: 300, height: 630, width: 900
        });
        dialog.title(""Kiosk Set Up"");
        dialog.bind(""open"", serialno);
        create_new();
        $(""#rolemenu"").show();
       
        clear_valaddnew();

        //add pop up close
        dialog.unbind(""close"");
        dialog.bind(""close"", onWindowEditHeaderClose);

       
      
    }

        //pop up close refresh
        var onWindowEditHeaderClose = function (e) {
            debugger;

            //setTimeout(function () {
            //    debugger;
            //    window.location.href = '../KioskSetup/KioskSetup';
            //");
            WriteLiteral(@"});

            list();
            
        };

        function clear_valaddnew() {
            debugger;
            $(""#txt_KioskId"").val("""");
            $(""#txt_KioskName"").val("""");
            $('#txt_status').data(""kendoComboBox"").value("""");
            $(""#txtValidity1"").val("""");
            $('#txt_Bilingual').data(""kendoComboBox"").value("""");
            $(""#txt_FPOName"").val("""");
            $(""#txt_Address"").val("""");
            $(""#txt_Pincode"").val("""");
            $('#txt_Village').data(""kendoComboBox"").value("""");
            $('#cmb_Taluk').data(""kendoComboBox"").value("""");
            $('#cmb_District').data(""kendoComboBox"").value("""");
            $('#cmb_State').data(""kendoComboBox"").value("""");
            grid_permission([]);
            $(""#txt_Notes"").val("""");
            $(""#txt_Name"").val("""");
            $(""#txt_Designation"").val("""");
            $(""#txt_Mobile"").val("""");
            $(""#txt_Landline"").val("""");
            $(""#txt_eMail"").val("""");

        }");
            WriteLiteral(@"
    //Notes
    function notessave() {
        debugger;
        $(""#Notesdialog"").kendoWindow();
        var dialog = $(""#Notesdialog"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 456, height: 170, width: 580
        });
        dialog.title(""Notes"");
        dialog.bind(""open"", serialno);

   //  savenotes();
    }

    function savenotes() {
         var notes = $(""#txt_Notes"").val();

        save();
    }

    function grid_role(data) {
        debugger;
        $(""#grid_role"").kendoGrid({
            dataSource: {
                data: data, //  pageSize: 20
            },
            height: 400,
            sortable: true,
            selectable: true,
            filterable: true,
            //change: onChangeSelection,
            selectable: ""singl"",   //  Grid Row Selection
            navigatable: true,
            toolbar: ""<a class='k-grid-add' id='Assign_sevicesheader' onClick='serial");
            WriteLiteral(@"no()'><span class='fa fa-plus' style='color:Black'></span></a>"",
            columns: [

                {
                    field: ""Kiosk_id"",
                    title: ""Kiosk Id"",
                    hidden: true,
                    width: 30
                },

                {
                    field: ""KioskCode"",
                    title: ""Kiosk code"",
                    width: 30
                },
                {
                    field: ""kiosk_Name"",
                    title: ""Kiosk name"",
                    width: 30
                },
                {
                    field: ""Bilingual"",
                    title: ""Bilingual"",
                    width: 30
                },


                {
                    field: ""Village"",
                    title: ""Village"",
                    width: 30
                },
                {
                    field: ""Taluk"",
                    title: ""Taluk"",

                    width: 30
        ");
            WriteLiteral(@"        },
                {
                    field: ""District"",
                    title: ""District"",

                    width: 30
                },
                {
                    field: ""State"",
                    title: ""State"",
                    width: 30
                }, {
                    command: [
                        {
                            name: ""View"",
                            text: ""<span class='fa fa-eye' style ='color:#357ab8;'onClick='onview()'></span>""
                        },
                        {
                            name: ""Edit"" ,
                            text: ""<span class='fa fa-pencil' style='color:#357ab8' onClick='onChangeSelection()'></span>""
                        },
                        //{
                        //    name: ""Delete"",
                        //    text: ""<span class='fa fa-close' style='color:#357ab8' onClick='ondelete()'></span>""
                        //},
                        {
 ");
            WriteLiteral(@"                           name: ""Delete1"",
                            text: ""<span class='fa fa-times' style='color:#357ab8;padding-left:2px' onClick='ondelete()'></span>""
                        },
                    ], title: ""Action"", width: ""25px"",
                },
                ]
        });
        load_master_code();
    }


    function serialnoContact() {
        debugger
        var kioskid = $(""#txt_Id"").val();
        if (kioskid == """" || kioskid == null) {
            kendoAlert(""Enter Header Details"");
            return false;
        }

        $(""#dialogContact"").kendoWindow();
        var dialog = $(""#dialogContact"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 196, width: 843
        });
        dialog.title(""Kiosk Set Up"");
        dialog.bind(""open"", serialno);
        $(""#rolemenucontact"").show();
        $(""#soilcontactsave"").show();
        clearcontactdtl();
     ");
            WriteLiteral(@" 
        //add pop up close
        dialog.unbind(""close"");
        dialog.bind(""close"", onWindowEditClose);


        
        }


        //pop up close refresh
        var onWindowEditClose = function (e) {
            debugger;
            contactlist();  
        };
        //Clear value in Contact
        function clearcontactdtl() {
            $(""#txt_contactId"").val("""");
            $(""#txt_Name"").val("""");
            $(""#txt_Designation"").val("""");
            $(""#txt_Mobile"").val("""");
            $(""#txt_Landline"").val("""");
            $(""#txt_eMail"").val("""");

        }

    function grid_permission(role_data) {
        debugger;
        $(""#grid_role_list"").kendoGrid({
            dataSource: {
                data: role_data,

            },
            height: 276,
            sortable: true,
            selectable: true,
            //change: onChangeSelection,
            selectable: ""singl"",   //  Grid Row Selection
            navigatable: true,
      ");
            WriteLiteral(@"      toolbar: ""<a class='k-grid-add' id='Assign_sevices' onClick='serialnoContact()'><span class='fa fa-plus' style='color:Black; '></span></a>"",

            columns: [
                {
                    field: ""Kiosk_Contactgid"",
                    title: ""Row Id"",
                    width: 10,
                    hidden: true,
                },
                {
                    field: ""Kiosk_id"",
                    title: ""Row Id"",
                    width: 10,
                    hidden: true,
                },

                {
                    field: ""in_Name"",
                    title: ""Name"",
                    width: 50,
                },
                {
                    field: ""in_Designation"",
                    title: ""Designation"",

                    width: 50
                },
                {
                    field: ""in_Mobile"",
                    title: ""Mobile"",

                    width: 50
                },

            ");
            WriteLiteral(@"    {
                    field: ""in_Landline"",
                    title: ""Landline"",

                    width: 50,
                },
                {
                    field: ""in_eMail"",
                    title: ""eMail"",
                  width: 50
                },
                {
                    command: [
                        {
                            name: ""View"",
                            text: ""<span class='fa fa-eye' style ='color:#357ab8;'onClick='onviewContactdetails()'></span>""
                        },
                        {
                            name: ""Edit"",
                            text: ""<span class='fa fa-pencil' style='color:#357ab8' onClick='ConttactDetailsEdit()'></span>""
                        },
                        {
                            name: ""Delete"",
                            id:""delete"",
                            text: ""<span class='fa fa-close' style='color:#357ab8' onClick='ondeleteContactdetails()'></spa");
            WriteLiteral(@"n>""
                        },
                    ], title: ""Action"", width: ""40px"",
                },

                 ],

        });
    }

    function onview() {
        debugger;
       
        onChangeSelection();
        $(""#rolemenu"").hide();
        $(""#attach"").hide();
        $(""#notessave"").hide();
        $(""#rolemenucontact"").hide();
    }
    function onviewContactdetails() {
        debugger;
    

        ConttactDetailsEdit();
        $(""#rolemenucontact"").hide();
        $(""#rolemenu"").hide();
        $(""#attach"").hide();
        $(""#notessave"").hide();
        $(""#delete"").hide();
        $(""#soilcontactsave"").hide();
    }



    function save() {
        debugger;


        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);

        if (obj_val.in_Kiosk_gid == """") {
            obj_val.in_Kiosk_gid = 0;
           obj_val.In_mode_flag = ""I""
        }
        else {
            obj_val.In_mode_flag");
            WriteLiteral(@" = ""U""
        }
        if (obj_val.in_Address == """") {
            kendoAlert(""Address Cannot Be Blank"");
            return false;
        }
        if (obj_val.in_Bilingual_code == """") {
            kendoAlert(""Billing Language Cannot Be Blank"");
            return false;
        }

        if (obj_val.in_Pincode == """") {
            kendoAlert(""Pincode Cannot Be Blank"");
            return false;
        }

        if (obj_val.in_Village == """") {
            kendoAlert(""Village Cannot Be Blank"");
            return false;
        }
        if (obj_val.in_status_name == """") {
            kendoAlert(""Status Cannot Be Blank"");
            return false;
        }
        if (obj_val.in_fpo_name == """") {
            kendoAlert(""FPO Cannot Be Blank"");
            return false;
        }

        obj_val.in_Bilingual_code = $(""#txt_Bilingual"").data(""kendoComboBox"").text();
        obj_val.in_Village  = $(""#txt_Village"").data(""kendoComboBox"").text();

        obj_val.in_Taluk  = $");
            WriteLiteral(@"(""#cmb_Taluk"").data(""kendoComboBox"").text();

        obj_val.in_District = $(""#cmb_District"").data(""kendoComboBox"").text();

        obj_val.in_State = $(""#cmb_State"").data(""kendoComboBox"").text();



         var grid_val = JSON.stringify($(""#grid_role_list"").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);
        result.Kiosk_Contactgid  = ""0"";
        $.each(result, function (index, value) {
            var row_id = value.Kiosk_Contactgid;
            if (row_id == undefined) {
                result[index].Kiosk_Contactgid = ""0"";
            }
        });
        var obj_grid_val = result;

        var kiosk_Notes = $(""#txt_Notes"").val();
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        data.context.Header.in_Bilingual_code = obj_val.in_Bilingual_code;
        data.context.Header.in_Village = obj_val.in_Village;
        data.context.Header.in_Taluk = obj_val");
            WriteLiteral(@".in_Taluk;
        data.context.Header.in_District = obj_val.in_District;
        data.context.Header.in_State = obj_val.in_State;
        //data.context.In_mode_flag = ""I""
        data.context.Detail = obj_grid_val;
        data.context.notes = kiosk_Notes;
        var Context = data.context;


        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail, In_mode_flag: Context.In_mode_flag, notes: Context.notes }),
            url: ""/KioskSetup/SaveKiosk"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                var Res = JSON.parse(response);

                if (Res[1] == ""true"") {
                    debugger;
                    // width: ""350px""
                    // height: ""130px""
                    ");
            WriteLiteral(@"kendoAlert(""Kiosk Set up Details saved successfully"");
                    var kioskgid = Res[0];
                    $(""#txt_Id"").val(kioskgid);
                    // getheader();
                    list();
                }
                else if (Res[1] == ""Duplicate"") {
                    debugger;
                    kendoAlert(""Duplicate Kiosk Setup!"");

                }


            }

        });
    }
    function ondelete() {
        debugger;
        var kendoWindow = $(""<div />"").kendoWindow({
            title: ""Confirm"",
            //width: ""350px"",
            //height: ""130px"",
            resizable: false,
            modal: true
        });
        kendoWindow.data(""kendoWindow"")
            .content($(""#grid_delete-confirmation"").html())
            .center().open();
        kendoWindow
            .find("".grid_delete-confirm,.grid_delete-cancel"")
            .click(function () {
                debugger;
                if ($(this).hasClass(""grid_del");
            WriteLiteral(@"ete-confirm"")) {
                    debugger;
                    var grid = $(""#grid_role"").data(""kendoGrid"");
                    var selectedItem = grid.dataItem(grid.select());
                    var formval = form_Serialize(""rolescreen_form1"");
                   var obj_val = JSON.parse(formval);

                  obj_val.in_Kiosk_gid = selectedItem.Kiosk_id;


                    obj_val.in_mode_flag = ""D"";
                    var data = {};
                    data.context = getContext();
                    data.context.Header = obj_val;
                    data.context.Detail = [];
                    data.context.In_mode_flag = ""D""
                    var Context = data.context;
                    $.ajax({
                        type: ""POST"",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail, In_mode_flag: Context.In_mode_flag }),
 ");
            WriteLiteral(@"                       url: ""/KioskSetup/SaveKiosk"",
                        dataType: ""json"",
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {
                            debugger;
                            var Res = JSON.parse(response);

                            if (Res[1] == ""true"") {
                                kendoAlert(""Kiosk Set up Details Deleted successfully"");
                            }

                            setTimeout(function () {
                                debugger;
                                window.location.href = '../KioskSetup/KioskSetup';
                            },  500);


                            }

                    });
                }
                kendoWindow.data(""kendoWindow"").close();
            });
    }


    function DeleteDetails() {
        $(""#txtMode"").val('D');
        save();
    }

    //header Refresh
    function gethead");
            WriteLiteral(@"er() {
        debugger;
        $(""#rolemenu"").show();
        debugger;
        $(""#dialog"").kendoWindow();
        var dialog = $(""#dialog"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 420, width: 900
        });
        dialog.title(""Kiosk Set up"");
        dialog.bind(""open"", serialno);
        var grid = $(""#grid_role"").data(""kendoGrid"");
        var selectedItem = grid.dataItem(grid.select());
        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
       // obj_val.in_Kiosk_gid = selectedItem.Kiosk_id;
        var data1 = {};
        data1.context = getContext();
        data1.context.In_mode_flag = ""U"";
        data1.context.Header = obj_val;
        var Context = data1.context;
        obj_val.in_Kiosk_gid= $(""#txt_Id"").val();
        var Kiosk_id = obj_val.in_Kiosk_gid;

        $.ajax({
            type: ""POST"",
            data: JSON.stringi");
            WriteLiteral(@"fy({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Kiosk_gid: obj_val.in_Kiosk_gid }),
            url: ""/KioskSetup/Kioskfetch"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                var Res = JSON.parse(response);
                if (Res != null) {
                    generate_Kiosk_header(Res.header);
                   /// generate_kioskdetail_list(Res.detail)
                }
                else {

                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }

    function onChangeSelection() {
        debugger;
        $(""#rolemenu"").show();
        $(""#notes"").show();
        debugger;
        $(""#dialog"").kendoWindow();
        var dialog = $(""#dialog"").data(""kendoWindow"");
        dialog.open().element");
            WriteLiteral(@".closest("".k-window"").css({
            top: 55,
            left: 300, height: 630, width: 900
        });
        dialog.title(""Kiosk Set up"");
        dialog.bind(""open"", serialno);
        var grid = $(""#grid_role"").data(""kendoGrid"");
        var selectedItem = grid.dataItem(grid.select());
        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
        obj_val.in_Kiosk_gid = selectedItem.Kiosk_id;
          var data1 = {};
        data1.context = getContext();
        data1.context.In_mode_flag = ""U"";
        data1.context.Header = obj_val;
        var Context = data1.context;
        var Kiosk_id = obj_val.in_Kiosk_gid;
          $.ajax({
                type: ""POST"",
                 data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Kiosk_gid: obj_val.in_Kiosk_gid }),
                 url: ""/KioskSetup/Kioskfetch"",
                dataType: ""json"",
                c");
            WriteLiteral(@"ontentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    var Res = JSON.parse(response);
                    if (Res != null) {
                        generate_Kiosk_header(Res.header);
                        generate_kioskdetail_list(Res.detail)
                    }
                    else {

                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
    //header, detail  edit
    function generate_Kiosk_header(res) {
        debugger;
        $(""#txt_Id"").val(res.in_Kiosk_gid);
        $(""#txt_KioskId"").val(res.in_Kiosk_code);
        $(""#txt_KioskName"").val(res.in_Kiosk_name);
        $(""#txt_FPOName"").val(res.in_fpo_name);
        $(""#txt_Bilingual"").data(""kendoComboBox"").value(res.in_Bilingual_code);
        $(""#txt_Address"").val(res.in_Address);
        $(""");
            WriteLiteral(@"#txt_Pincode"").val(res.in_Pincode);
        $('#txt_Village').data(""kendoComboBox"").value(res.in_Village);
        $('#cmb_Taluk').data(""kendoComboBox"").value(res.in_Taluk);
        $('#cmb_District').data(""kendoComboBox"").value(res.in_District);
        $('#cmb_State').data(""kendoComboBox"").value(res.in_State);
        $('#txt_status').data(""kendoComboBox"").value(res.in_status_name);
        $('#txt_Notes').val(res.in_Kiosk_Notes);

    }
    function generate_kioskdetail_list(res) {
        debugger;
        if (res != null) {
            var data = changedataType(res);
            grid_permission(data);
        }
        else {
            grid_permission([]);
        }
    }

    function get_role_details(id) {
        debugger;
        var formval = form_Serialize(""rolescreen_form"");
        var obj_val = JSON.parse(formval);
        obj_val.role_rowid = id;
        obj_val.orgn_level = ""."";

        var data1 = {};
        data1.context = getContext();
        data1.context.");
            WriteLiteral(@"Header = obj_val;
        var Context = data1.context;
        var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, role_rowid: obj_val.role_rowid, orgn_level: obj_val.orgn_level };

        $.ajax({

          url: '");
#nullable restore
#line 1081 "D:\Ramya\Projects\Naf_Kiosk_Solution\Kiosk web\Views\KioskSetup\KioskSetup.cshtml"
           Write(Url.Action(" ", "RoleDefinition"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
                debugger;
                if (response1 != null) {
                    generate_roleactivity_header(response1.context.header);
                    generate_roleactivity_detail(response1.context.detail);
                }
                else {
                    grid_role([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
        $(""#txt_Role_rowid"").val(id);
    }

");
            WriteLiteral(@"        function generate_roleactivity_list(res) {
            var data = changedataType(res);
            grid_role(data);
        }

        function generate_roleactivity_header(res) {
            debugger;
            $(""#txt_KioskId"").val(res.out_role_code);

            $(""#txt_KioskName"").val(res.out_role_name);

            $(""#txt_status_code"").val(res.out_status_code);
            $(""#txt_stxt_Bilingualtatus_desc"").val(res.out_status_desc);
            $(""#txtMode"").val(res.out_mode_flag);

            $(""#txt_timestamp"").val(res.out_row_timestamp);

            $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');
        }


        function generate_roleactivity_detail(res) {
            var data = changedataType(res);
            grid_permission(data);
        }



        function create_new() {
            try {
                clear_val();
                load();
                $(""#txtcode"").removeAttr(""readonly"");
              ");
            WriteLiteral(@"  $(""#txtMode"").val(""I"");
                $(""#txt_status_code"").val(""N"");
                $(""#modevalue"").text(""New Mode"");
                $('.k-widget.k-tooltip.k-tooltip-validation.k-invalid-msg').css('display', 'none');

            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }


        function clear_val() {
            $(""#txt_RoleId"").val('');
            $(""#txt_RoleName"").val('');
            // $('#cmb_Village').data(""kendoComboBox"").value('');
            grid_permission([]);
        }

     
        //Contact list
        function contactlist() {
            debugger;
            //var soilid = $(""#txt_Id"").val();
            //var doc_type = ""KioskSetup"";
            //var data = {};
            $(""#dialog"").kendoWindow();
            var dialog = $(""#dialog"").data(""kendoWindow"");
            dialog.open().element.closest("".k-window"").css({
                top: 121,
                left: 300, h");
            WriteLiteral(@"eight: 420, width: 900
            });
            dialog.title(""Kiosk Set up"");
            dialog.bind(""open"", serialno);
            var grid = $(""#grid_role"").data(""kendoGrid"");
            var selectedItem = grid.dataItem(grid.select());
            var formval = form_Serialize(""rolescreen_form"");
            var obj_val = JSON.parse(formval);
            //obj_val.in_Kiosk_gid = selectedItem.Kiosk_id;
            obj_val.in_Kiosk_gid = $(""#txt_Id"").val();
            var data1 = {};
            data1.context = getContext();
            data1.context.In_mode_flag = ""U"";
            data1.context.Header = obj_val;
            var Context = data1.context;
            var Kiosk_id = obj_val.in_Kiosk_gid;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Kiosk_gid: obj_val.in_Kiosk_gid }),
                url: ""/KioskSetup/Kioskdetailslist/"",
        ");
            WriteLiteral(@"        dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    var Res = JSON.parse(response);
                    if (Res != null) {
                        debugger;
                        detail_list(Res.detail);
                        // generate_kioskdetail_list(Res.detail)
                    }
                    else {

                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }


        function detail_list(res) {
            debugger;
            var data = changedataType(res);
            grid_permission(data);
        }

        //Contact Details Save
        function ContactDetailssave() {
            debugger;



            var kioskid = $(""#txt_Id"").val();
            var contactgid = $(""#txt_contactId"").");
            WriteLiteral(@"val();
            // var kioskid = $(""#txt_kioskId"").val();
            var Name = $(""#txt_Name"").val();
            var designation = $(""#txt_Designation"").val();
            var mobileno = $(""#txt_Mobile"").val();
            var landlineno = $(""#txt_Landline"").val();
            var eMail = $(""#txt_eMail"").val();


            if (contactgid == """") {
                contactgid = 0
                In_mode_flag = ""I""
            }
            else {
                In_mode_flag = ""U""
            }
            //if (kioskid == """") {
            //    kioskid = 0;
            //    kendoAlert(""Please Enter Header Details"");
            //    return false;
            //}
            //validation
            if (Name == """") {
                kendoAlert(""Contact Name Cannot Be Blank"");
                return false;
            }
            if (designation == """") {
                kendoAlert(""Designation Language Cannot Be Blank"");
                return false;
            }
       ");
            WriteLiteral(@"     if (mobileno == """") {
                kendoAlert(""Mobile No Cannot Be Blank"");
                return false;
            }
            if (landlineno == """" || landlineno == ""0"") {
                kendoAlert(""Land Line no Cannot Be Blank"");
                return false;
            }
            if (eMail == """") {
                kendoAlert(""eMail Cannot Be Blank"");
                return false;
            }

            var data = {};
            data.context = getContext();


            var Context = data.context;

            var model = {};
            model.Kiosk_Contactgid = contactgid;
            model.in_Name = Name;
            model.in_Designation = designation;
            model.in_eMail = eMail;
            model.in_Landline = landlineno;
            model.in_Mobile = mobileno;
            model.Kiosk_id = kioskid;
            model.userId = Context.userId;
            model.orgnId = Context.orgnId;
            model.locnId = Context.locnId;
            model.l");
            WriteLiteral(@"ocaleId = Context.localeId;
            model.In_mode_flag = In_mode_flag;
            var _data = { ""In_mode_flag"": Context.In_mode_flag }
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({
                    userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId,
                    In_mode_flag: In_mode_flag, Kiosk_gid: kioskid, Kiosk_Contactgid: contactgid,
                    in_Name: Name,
                    in_Designation: designation, in_eMail: eMail,
                    in_Mobile: mobileno, in_Landline: landlineno
                }),
                url: ""/KioskSetup/KioskContactDetails"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var Res = JSON.parse(response);

                    if (Res[1] == ""true"") {
                        kendoAlert(""Kiosk Set up Contact Details saved su");
            WriteLiteral(@"ccessfully"");

                        clearcontact();
                    }
                    // contactlist();

                }



            });
        }


        //Clear value in Contact
        function clearcontact() {
            $(""#txt_contactId"").val("""");
            $(""#txt_Name"").val("""");
            $(""#txt_Designation"").val("""");
            $(""#txt_Mobile"").val("""");
            $(""#txt_Landline"").val("""");
            $(""#txt_eMail"").val("""");

        }
        //Edit:
        function ConttactDetailsEdit() {
            debugger;
            $(""#rolemenucontact"").show();
         
            debugger;
            $(""#dialogContact"").kendoWindow();
            var dialog = $(""#dialogContact"").data(""kendoWindow"");
            dialog.open().element.closest("".k-window"").css({
                top: 121,
                left: 300, height: 420, width: 900
            });
            dialog.title(""Contact Details"");
            dialog.bind(""open"", serialno);
");
            WriteLiteral(@"            $(""#soilcontactsave"").show();
            var grid = $(""#grid_role_list"").data(""kendoGrid"");
            var selectedItem1 = grid.dataItem(grid.select());
            // var test = selectedItem1.kiosk_Contactgid;
            var formval = form_Serialize(""rolescreencontact"");
            var obj_val = JSON.parse(formval);
            obj_val.in_Kiosk_gid = selectedItem1.Kiosk_id;
            obj_val.in_contact_gid = selectedItem1.kiosk_Contactgid;

            // var contactid = $(""#txt_contactId"").val();

            var data1 = {};
            data1.context = getContext();
            data1.context.In_mode_flag = ""U"";
            data1.context.Header = obj_val;
            var Context = data1.context;
            data1.context.Kiosk_Contactgid = obj_val.in_contact_gid;
            var Kiosk_id = obj_val.in_Kiosk_gid;




            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.");
            WriteLiteral(@"locnId, localeId: Context.localeId, Kiosk_gid: obj_val.in_Kiosk_gid, Kiosk_Contactgid: Context.Kiosk_Contactgid }),
                url: ""/KioskSetup/Kioskviewfetch"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    var Res = JSON.parse(response);
                    if (Res != null) {
                        kioskdetail_list(Res.detail[0])
                       
                    }
                    else {

                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }



        //edit binding
        function kioskdetail_list(res) {
            debugger;
            $(""#txt_contactId"").val(res.kiosk_Contactgid);
            $(""#txt_Designation"").val(res.in_Designation);
            $(""#txt_Name"").val(re");
            WriteLiteral(@"s.in_Name);
            $(""#txt_Mobile"").val(res.in_Mobile);
            $(""#txt_Landline"").val(res.in_Landline);

            $(""#txt_eMail"").val(res.in_eMail);
        }

        //contact details delete

        function ondeleteContactdetails() {
            debugger;
            var kendoWindow = $(""<div />"").kendoWindow({
                title: ""Confirm"",
                width: ""350px"",
                height: ""130px"",
                resizable: false,
                modal: true
            });
            kendoWindow.data(""kendoWindow"")
                .content($(""#grid_delete-confirmation"").html())
                .center().open();
            kendoWindow
                .find("".grid_delete-confirm,.grid_delete-cancel"")
                .click(function () {
                    debugger;
                    if ($(this).hasClass(""grid_delete-confirm"")) {
                        debugger;
                        var grid = $(""#grid_role_list"").data(""kendoGrid"");
              ");
            WriteLiteral(@"          var selectedItem1 = grid.dataItem(grid.select());
                        var formval = form_Serialize(""rolescreencontact"");
                        var obj_val = JSON.parse(formval);

                        obj_val.in_contact_gid = selectedItem1.kiosk_Contactgid;
                        // var contactid = $(""#txt_contactId"").val();


                        obj_val.in_mode_flag = ""D"";
                        var data = {};
                        data.context = getContext();
                        data.context.Header = obj_val;
                        data.context.Detail = [];
                        data.context.In_mode_flag = ""D""
                        data.context.Kiosk_Contactgid = obj_val.in_contact_gid;
                        var Context = data.context;
                        $.ajax({
                            type: ""POST"",
                            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.local");
            WriteLiteral(@"eId, Header: Context.Header, Detail: Context.Detail, In_mode_flag: Context.In_mode_flag, Kiosk_Contactgid: Context.Kiosk_Contactgid }),
                            url: ""/KioskSetup/KioskContactDetails"",
                            dataType: ""json"",
                            contentType: 'application/json; charset=utf-8',
                            success: function (response) {
                                debugger;
                                var Res = JSON.parse(response);

                                if (Res[1] == ""true"") {
                                    kendoAlert(""Kiosk Set up Contact Details Deleted successfully"");
                                    contactlist();
                                }
                            }
                        });
                    }
                    kendoWindow.data(""kendoWindow"").close();
                });
        }
    </script>
    <style>
        #grid_role_list input[type=checkbox] {
            margin: 4px 3");
            WriteLiteral(@"7px 0;
        }

        .k-widget.k-tooltip {
            background-color: #ffe79e;
            color: #6b5100;
        }

        span.k-tooltip {
            white-space: pre-line;
        }
    </style>

    <script>
        //atachment
        function attach() {
            debugger;

            var kioskcode = $(""#txt_KioskId"").val();

            console.log(kioskcode);
            if (kioskcode == """") {

                grid_attachment([]);
            }
            $(""#attachModal"").kendoWindow();
            var attachModal = $(""#attachModal"").data(""kendoWindow"");
            attachModal.open().element.closest("".k-window"").css({
                top: 80,
                left: 350, height: 420, width: 775
            });
            attachModal.title(""Attachment"");
            attachModal.bind(""open"", attachModal);


            attachlist();
        }
        function attachlist() {
            var soilid = $(""#txt_Id"").val();
            var doc_type = ""Kio");
            WriteLiteral(@"skSetup"";
            var data = {};
            data.context = getContext();
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, id: soilid, doc_type: doc_type }),
                url: ""/Attacment/attachmentList/"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response != null) {
                        generate_attach_list(response.attach);
                    }
                    else {
                        grid_attachment([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        function generate_attach_list(res) {
            var");
            WriteLiteral(@" data = changedataType(res);
            grid_attachment(data);
        }

        function save_Image() {
            debugger;
            try {
                var xhr = new XMLHttpRequest();
                var fd = new FormData();
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        var value = JSON.parse(xhr.responseText);
                        kendoAlert(""Attachment saved successfully"");
                        attachlist()
                        clear_val()
                    }
                    // attachlist()
                };

                var data = getContext()
                var descripname = $(""#txtdes"").val();
                var documentid = $(""#txtdoc"").val();
                fd.append(""file"", document.getElementById('attachfile').files[0]);
                fd.append(""userID"", data.userId);
                fd.append(""description"", descripname);
                fd.");
            WriteLiteral(@"append(""document"", documentid);
                fd.append(""locid"", data.locnId);
                fd.append(""gid"", $(""#txt_Id"").val());
                fd.append(""attachid"", $(""#txt_attach_gid"").val());
                fd.append(""model_flag"", ""I"");

                xhr.open(""POST"", ""/Attacment/attachment_save/"", true);
                xhr.send(fd);
                xhr.addEventListener(""load"", function (event) {
                }, false);
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
        function grid_attachment(data) {
            $(""#grid_attachment"").kendoGrid({
                dataSource: {
                    data: data, //  pageSize: 20
                },
                height: 270,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: ""attach_gid"",
                ");
            WriteLiteral(@"        title: ""attach Id"",
                        hidden: true,
                        width: 30
                    },
                    {
                        field: ""filepath"",
                        title: ""File"",
                        width: 30
                    },
                    {
                        field: ""filename"",
                        title: ""File name"",
                        width: 30
                    },
                    {
                        field: ""document"",
                        title: ""Document"",
                        width: 30
                    },
                    {
                        field: ""description"",
                        title: ""descrition"",
                        width: 30
                    },
                    {
                        field: ""userId"",
                        title: ""Attached By"",
                        width: 30
                    },
                    {
                     ");
            WriteLiteral(@"   command: [
                            {
                                name: ""Delete"",
                                text: ""<span class='fa fa-close' style='color:#357ab8' onClick='onattachdelete()'></span>""

                            },
                            {
                                name: ""download"",
                                text: ""<span  title = 'Download' class='fa fa-download style='color:#357ab8,cursor:pointer' onClick='downloadAttach()'></span>""

                            },
                        ], title: ""Action"", width: ""25px"",
                    },],
            });
        }



        function onattachdelete() {
            debugger;
            var kendoWindow = $(""<div />"").kendoWindow({
                title: ""Confirm"",
                width: ""350px"",
                height: ""130px"",
                resizable: false,
                modal: true
            });
            kendoWindow.data(""kendoWindow"")
                .content($(""");
            WriteLiteral(@"#grid_delete-confirmation"").html())
                .center().open();
            kendoWindow
                .find("".grid_delete-confirm,.grid_delete-cancel"")
                .click(function () {
                    debugger;
                    if ($(this).hasClass(""grid_delete-confirm"")) {
                        debugger;
                        var grid = $(""#grid_attachment"").data(""kendoGrid"");
                        var selectedItem = grid.dataItem(grid.select());
                        var formval = form_Serialize(""grid_attachment"");
                        var obj_val = JSON.parse(formval);
                        obj_val.attach_gid = selectedItem.attach_gid;
                        obj_val.In_mode_flag = ""D"";
                        var data = {};
                        data.context = getContext();
                        data.context.Header = obj_val;
                        var Context = data.context;
                        $.ajax({
                            type: ""POST"",");
            WriteLiteral(@"
                            data: JSON.stringify({
                                userId: Context.userId, locId: Context.locnId,
                                gid: Context.Header.attach_gid, model_flag: Context.Header.In_mode_flag
                            }),
                            url: ""/Attacment/attachmentdelete/"",
                            dataType: ""json"",
                            contentType: 'application/json; charset=utf-8',
                            success: function (response) {
                                var Res = JSON.parse(response);
                                if (Res.out_result == ""true"") {
                                    kendoAlert(""Attachment Details Deleted successfully"");
                                    clear_val();
                                    attachlist();
                                }
                            },
                            error: function (er) {
                                alert(er)
                  ");
            WriteLiteral(@"              console.log(er)
                            }

                        });
                    }
                    kendoWindow.data(""kendoWindow"").close();
                });
        }


        //Clear  Value attachment file
        function clear_val() {
            $(""#txtdes"").val("""");
            $(""#txtdoc"").val("""");
            $(""#attachfile"").val("""");

            grid_attachment([]);
        }


        //download


        function downloadAttach() {
            debugger;
            var kendoWindow = $(""<div />"").kendoWindow({
                title: ""Confirm"",
                width: ""350px"",
                height: ""130px"",
                resizable: false,
                modal: true
            });

            debugger;
            var grid = $(""#grid_attachment"").data(""kendoGrid"");
            var selectedItem = grid.dataItem(grid.select());
            var formval = form_Serialize(""grid_attachment"");
            var obj_val = JSON.parse(fo");
            WriteLiteral(@"rmval);
            obj_val.attach_gid = selectedItem.attach_gid;
            //obj_val.files = selectedItem.files;
            obj_val.files = selectedItem.filename;
            obj_val.filepath = selectedItem.filepath;
            var filepath = selectedItem.filepath;
            $(""#download_exl_template"").attr(""href"", filepath);
            document.getElementById(""download_exl_template"").click();



        }

    </script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
